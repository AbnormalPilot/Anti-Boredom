/* Custom properties for easy theme switching later */
:root {
    --bg-color: #2c2e31;
    /* Dark background */
    --main-color: #e2e2e3;
    /* Main text color for typed correct text */
    --untyped-color: #6d6f73;
    /* Muted text for untyped words */
    --sub-color: #6d6f73;
    /* Muted text for labels, disabled states (reusing untyped-color) */

    --accent-color: #1e88e5;
    /* A vibrant blue accent (can be changed to teal, purple etc.) */
    --error-color: #ef5350;
    /* Red for incorrect */
    --current-char-underline: var(--accent-color);
    /* Underline for current char */
}

body {
    font-family: 'Inter', 'Roboto Mono', monospace, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    background-color: var(--bg-color);
    color: var(--main-color);
    /* Default body text color */
    font-size: 1.1em;
    line-height: 1.6;
}

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;500;700&display=swap');

.container {
    background-color: var(--bg-color);
    padding: 30px;
    border-radius: 8px;
    text-align: center;
    width: 90%;
    max-width: 800px;
    display: flex;
    flex-direction: column;
    gap: 25px;
}

.logo {
    color: var(--accent-color);
    font-size: 2.5em;
    font-weight: 700;
    margin-bottom: 20px;
    letter-spacing: 2px;
    text-transform: lowercase;
}

/* Options section for the checkbox */
.options {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 15px;
}

/* Custom Checkbox Styling (unchanged, but ensuring it matches theme) */
.checkbox-container {
    display: block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
    cursor: pointer;
    font-size: 0.9em;
    color: var(--untyped-color);
    /* Use untyped-color for label */
    user-select: none;
    text-align: left;
}

.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: #555;
    border-radius: 3px;
    transition: background-color 0.2s ease;
}

.checkbox-container:hover input~.checkmark {
    background-color: #666;
}

.checkbox-container input:checked~.checkmark {
    background-color: var(--accent-color);
}

.checkmark::after {
    content: "";
    position: absolute;
    display: none;
}

.checkbox-container input:checked~.checkmark::after {
    display: block;
}

.checkbox-container .checkmark::after {
    left: 7px;
    top: 3px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}

.test-area {
    margin-bottom: 25px;
}

#quote-scroll-container {
    max-height: 150px;
    overflow: hidden;
    /* We'll control scrolling with JS transform, so hidden is fine */
    position: relative;
    margin-bottom: 20px;
    padding: 20px 0;
    background-color: transparent;
    border-radius: 5px;
    display: flex;
    justify-content: center;
    /* Keep text centered horizontally within its view */
    align-items: center;
    /* Vertically center if quote is short */
    /* If you want a more rigid top alignment for long quotes that scroll, use flex-start */
    /* align-items: flex-start; */
}

#quote-display {
    background-color: transparent;
    border: none;
    padding: 0;
    font-size: 1.8em;
    line-height: 1.6;
    text-align: center;
    min-height: 120px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-content: flex-start;
    /* Aligns lines to the top within the flex container */
    color: var(--untyped-color);
    /* Default color for all text in display is untyped */
    position: relative;
    transition: transform 0.1s ease-out;
    will-change: transform;
}

#quote-display span {
    transition: color 0.05s ease-out, background-color 0.05s ease-out, border-color 0.05s ease-out;
    white-space: pre;
    position: relative;
    display: inline-block;
    padding: 0 1px;
    /* Small padding for highlight visibility */
    border-radius: 2px;
}

/* Styling for correct and incorrect characters */
#quote-display .correct {
    color: var(--main-color);
    /* Correct characters stand out slightly from untyped */
}

#quote-display .incorrect {
    /* Removed red text color */
    background-color: rgba(239, 83, 80, 0.2);
    /* Subtle red background */
    border-bottom: 1px solid var(--error-color);
    /* Subtle red underline */
    color: var(--main-color);
    /* Keep the text readable, not red */
}

/* Blinking Cursor for current character */
@keyframes blink {
    0%, 100% {
        border-color: transparent;
    }

    /* Blink the border color */
    50% {
        border-color: var(--current-char-underline);
    }
}

#quote-display .current {
    /* The default color for the char itself can remain untyped-color or main-color */
    color: var(--untyped-color);
    /* This character hasn't been typed yet, so its text color is untyped */
    position: relative;
    /* We'll use a border for the cursor, not a background */
    border-bottom: 2px solid transparent;
    /* Default transparent border */
    animation: blink 1s step-end infinite;
    /* Blinking animation on the border */
}

#quote-display .current.correct {
    /* If the current char happens to be correct (e.g., after backspace) */
    color: var(--main-color);
}

#quote-display .current.incorrect {
    /* If the current char happens to be incorrect */
    color: var(--main-color);
}


#quote-input {
    width: 100%;
    padding: 15px 20px;
    font-size: 1.5em;
    border: none;
    border-radius: 5px;
    box-sizing: border-box;
    resize: none;
    outline: none;
    background-color: #4a4d52;
    /* Slightly darker than sub-color for better contrast */
    color: var(--main-color);
    text-align: center;
    caret-color: var(--accent-color);
    height: 0;
    padding: 0;
    opacity: 0;
    transition: all 0.2s ease-in-out;
}

#quote-input.active {
    height: 60px;
    padding: 15px 20px;
    opacity: 1;
    background-color: #4a4d52;
}

#quote-input:disabled {
    background-color: var(--sub-color);
    cursor: not-allowed;
}

#start-button {
    background-color: var(--accent-color);
    color: white;
    border: none;
    padding: 12px 25px;
    font-size: 1.2em;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 20px;
    transition: background-color 0.2s ease-in-out, transform 0.1s ease-out;
}

#start-button:hover {
    background-color: color-mix(in srgb, var(--accent-color) 80%, black);
    transform: translateY(-2px);
}

#start-button:active {
    transform: translateY(0);
}

.results {
    margin-top: 30px;
    border-top: 1px solid var(--sub-color);
    padding-top: 20px;
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    color: var(--sub-color);
}

.result-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 10px 20px;
}

.results .label {
    font-size: 0.8em;
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-bottom: 5px;
}

.results .value {
    font-size: 2em;
    font-weight: 700;
    color: var(--main-color);
}

/* Responsive adjustments (unchanged) */
@media (max-width: 600px) {
    .container {
        padding: 20px;
    }

    h1.logo {
        font-size: 2em;
    }

    #quote-display {
        font-size: 1.5em;
        min-height: 100px;
    }

    #quote-input.active {
        height: 50px;
        font-size: 1.2em;
    }

    #start-button {
        padding: 10px 20px;
        font-size: 1em;
    }

    .result-item {
        margin: 5px 10px;
    }

    .results .value {
        font-size: 1.8em;
    }
}